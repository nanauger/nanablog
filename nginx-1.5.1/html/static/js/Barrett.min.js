// BarrettMu, a class for performing Barrett modular reduction computations in
// JavaScript.
function BarrettMu(a){this.modulus=biCopy(a);this.k=biHighIndex(this.modulus)+1;a=new BigInt;a.digits[2*this.k]=1;this.mu=biDivide(a,this.modulus);this.bkplus1=new BigInt;this.bkplus1.digits[this.k+1]=1;this.modulo=BarrettMu_modulo;this.multiplyMod=BarrettMu_multiplyMod;this.powMod=BarrettMu_powMod}function BarrettMu_modulo(a){var b=biDivideByRadixPower(a,this.k-1),b=biMultiply(b,this.mu),b=biDivideByRadixPower(b,this.k+1);a=biModuloByRadixPower(a,this.k+1);b=biMultiply(b,this.modulus);b=biModuloByRadixPower(b,this.k+1);a=biSubtract(a,b);a.isNeg&&(a=biAdd(a,this.bkplus1));for(b=0<=biCompare(a,this.modulus);b;)a=biSubtract(a,this.modulus),b=0<=biCompare(a,this.modulus);return a}function BarrettMu_multiplyMod(a,b){var c=biMultiply(a,b);return this.modulo(c)}function BarrettMu_powMod(a,b){var c=new BigInt;c.digits[0]=1;for(var e=a,d=b;;){0!=(d.digits[0]&1)&&(c=this.multiplyMod(c,e));d=biShiftRight(d,1);if(0==d.digits[0]&&0==biHighIndex(d))break;e=this.multiplyMod(e,e)}return c};